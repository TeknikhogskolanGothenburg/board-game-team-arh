@model BattleShipNet.Models.GameModel
@using GameEngine
@using BattleShipNet.Helpers

@functions {
    public List<object> makeBoard(int playerId)
    {
        Player player = Model.Game.Players[playerId];
        List<object> board = new List<object>();
        Dictionary<string, object> squarePosition;

        for (var x = 1; x <= 10; x++)
        {
            for (var y = 1; y <= 10; y++)
            {
                Square square = player.CheckPosition(new Position(x, y));

                squarePosition = new Dictionary<string, object>();

                squarePosition.Add("x", x);
                squarePosition.Add("y", y);

                if (square.HaveBeenHit && square.HaveBoat)
                {
                    squarePosition.Add("boathit", square.HaveBeenHit);
                }
                else
                {
                    squarePosition.Add("hit", square.HaveBeenHit);
                }

                board.Add(squarePosition);
            }
        }

        return board;
    }
}

@{
    Layout = null;

    Dictionary<string, object> json = new Dictionary<string, object>();
    List<object> playerboards = new List<object>();
    Player winner;

    json.Add("turn", Model.Game.Turn);

    json.Add("gameend", Model.Game.IsGameEnd(out winner));

    playerboards.Add(makeBoard(0));
    playerboards.Add(makeBoard(1));

    json.Add("boards", playerboards);
}

{
    @Html.Raw(JsonHelper.Render(json))
}
